@using Kendo.Mvc.UI
@using StudentInternshipManagement.Models.Entities
@{
    ViewBag.Title = "Quản lý lớp học";
    ViewBag.Category = "Quản lý";
    ViewBag.Section = "Lớp học";
    Layout = "~/Areas/Student/Views/Shared/_Layout.cshtml";
}

@section Kendo
{
    @Styles.Render("~/Content/kendo/styles")
    @Scripts.Render("~/Scripts/kendo/scripts")
}

@(Html.Kendo().Grid<LearningClass>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id).Hidden(true);
          columns.Bound(c => c.ClassName);
          columns.ForeignKey(p => p.SubjectId, (IQueryable<Subject>) ViewBag.Subjects, "Id", "SubjectName").EditorTemplateName("SubjectTemplate");
          columns.ForeignKey(p => p.SemesterId, (IQueryable<Semester>)ViewBag.Semesters, "Id", "Id").EditorTemplateName("SemesterTemplate");
      })
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Sortable(sortable => { sortable.SortMode(GridSortMode.SingleColumn); })
      .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
      .Scrollable(scr => scr.Height(310))
      .ClientDetailTemplateId("template")
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("JoinedLearningClasses_Read", "LearningClass"))
      ))

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<LearningClassStudent>()
          .Name("grid_#=Id#") // template expression, to be evaluated in the master context
          .Columns(columns =>
          {
              columns.ForeignKey(p => p.StudentId, (IQueryable<Student>) ViewBag.Students, "Id", "User.FullName").EditorTemplateName("StudentTemplate");
              columns.ForeignKey(p => p.ClassId, (IQueryable<LearningClass>)ViewBag.LearningClasses, "Id", "ClassName").EditorTemplateName("LearningClassTemplate");
              columns.Bound(o => o.MidTermPoint);
              columns.Bound(o => o.EndTermPoint);
              columns.Bound(o => o.TotalPoint);
          })
          .DataSource(dataSource => dataSource
              .Ajax()
              .PageSize(10)
              .Read(read => read.Action("GetStudentList", "LearningClass", new {classId = "#=Id#" }))
          )
          .Pageable()
          .Sortable()
          .ToClientTemplate())
</script>

